{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diver\\\\OneDrive\\\\Desktop\\\\Coursework\\\\Spring 2025\\\\SDP\\\\SDPTeam43\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authChecked, setAuthChecked] = useState(false);\n  const checkAuth = () => {\n    fetch(\"/api/check-auth\", {\n      credentials: \"include\"\n    }).then(res => res.json()).then(data => setIsAuthenticated(data.authenticated)).finally(() => setAuthChecked(true));\n  };\n  useEffect(() => {\n    checkAuth();\n  }, []);\n  const login = async (username, password) => {\n    const res = await fetch(\"/api/login\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        password\n      })\n    });\n    if (res.ok) {\n      checkAuth(); // refresh global state\n      return true;\n    }\n    return false;\n  };\n  const logout = async () => {\n    await fetch(\"/api/logout\", {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    setIsAuthenticated(false);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      authChecked,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"GJ/HWZG8RfYplTXa+bWL1ZTyppA=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","authChecked","setAuthChecked","checkAuth","fetch","credentials","then","res","json","data","authenticated","finally","login","username","password","method","headers","body","JSON","stringify","ok","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/diver/OneDrive/Desktop/Coursework/Spring 2025/SDP/SDPTeam43/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authChecked, setAuthChecked] = useState(false);\r\n\r\n  const checkAuth = () => {\r\n    fetch(\"/api/check-auth\", { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((data) => setIsAuthenticated(data.authenticated))\r\n      .finally(() => setAuthChecked(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    const res = await fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      checkAuth(); // refresh global state\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch(\"/api/logout\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n    });\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isAuthenticated, authChecked, login, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAErD,MAAMW,SAAS,GAAGA,CAAA,KAAM;IACtBC,KAAK,CAAC,iBAAiB,EAAE;MAAEC,WAAW,EAAE;IAAU,CAAC,CAAC,CACjDC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAKT,kBAAkB,CAACS,IAAI,CAACC,aAAa,CAAC,CAAC,CACtDC,OAAO,CAAC,MAAMT,cAAc,CAAC,IAAI,CAAC,CAAC;EACxC,CAAC;EAEDX,SAAS,CAAC,MAAM;IACdY,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,MAAMP,GAAG,GAAG,MAAMH,KAAK,CAAC,YAAY,EAAE;MACpCW,MAAM,EAAE,MAAM;MACdV,WAAW,EAAE,SAAS;MACtBW,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,QAAQ;QAAEC;MAAS,CAAC;IAC7C,CAAC,CAAC;IAEF,IAAIP,GAAG,CAACa,EAAE,EAAE;MACVjB,SAAS,CAAC,CAAC,CAAC,CAAC;MACb,OAAO,IAAI;IACb;IAEA,OAAO,KAAK;EACd,CAAC;EAED,MAAMkB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,MAAMjB,KAAK,CAAC,aAAa,EAAE;MACzBW,MAAM,EAAE,MAAM;MACdV,WAAW,EAAE;IACf,CAAC,CAAC;IACFL,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACEN,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IACnBC,KAAK,EAAE;MAAExB,eAAe;MAAEE,WAAW;MAAEW,KAAK;MAAES;IAAO,CAAE;IAAAxB,QAAA,EAEtDA;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CA9CWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}