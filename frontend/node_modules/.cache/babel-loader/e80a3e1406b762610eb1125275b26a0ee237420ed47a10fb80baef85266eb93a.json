{"ast":null,"code":"import{createContext,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(false);const[authChecked,setAuthChecked]=useState(false);const checkAuth=()=>{fetch(\"/api/check-auth\",{credentials:\"include\"}).then(res=>res.json()).then(data=>setIsAuthenticated(data.authenticated)).finally(()=>setAuthChecked(true));};useEffect(()=>{checkAuth();},[]);const login=async(username,password)=>{const res=await fetch(\"/api/login\",{method:\"POST\",credentials:\"include\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({username,password})});if(res.ok){checkAuth();// refresh global state\nreturn true;}return false;};const logout=async()=>{await fetch(\"/api/logout\",{method:\"POST\",credentials:\"include\"});setIsAuthenticated(false);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{isAuthenticated,authChecked,login,logout},children:children});};","map":{"version":3,"names":["createContext","useEffect","useState","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","authChecked","setAuthChecked","checkAuth","fetch","credentials","then","res","json","data","authenticated","finally","login","username","password","method","headers","body","JSON","stringify","ok","logout","Provider","value"],"sources":["C:/Users/diver/OneDrive/Desktop/Coursework/Spring 2025/SDP/SDPTeam43/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [authChecked, setAuthChecked] = useState(false);\r\n\r\n  const checkAuth = () => {\r\n    fetch(\"/api/check-auth\", { credentials: \"include\" })\r\n      .then((res) => res.json())\r\n      .then((data) => setIsAuthenticated(data.authenticated))\r\n      .finally(() => setAuthChecked(true));\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    const res = await fetch(\"/api/login\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ username, password }),\r\n    });\r\n\r\n    if (res.ok) {\r\n      checkAuth(); // refresh global state\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  };\r\n\r\n  const logout = async () => {\r\n    await fetch(\"/api/logout\", {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n    });\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{ isAuthenticated, authChecked, login, logout }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3D,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGR,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACS,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAErD,KAAM,CAAAW,SAAS,CAAGA,CAAA,GAAM,CACtBC,KAAK,CAAC,iBAAiB,CAAE,CAAEC,WAAW,CAAE,SAAU,CAAC,CAAC,CACjDC,IAAI,CAAEC,GAAG,EAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,EAAKT,kBAAkB,CAACS,IAAI,CAACC,aAAa,CAAC,CAAC,CACtDC,OAAO,CAAC,IAAMT,cAAc,CAAC,IAAI,CAAC,CAAC,CACxC,CAAC,CAEDX,SAAS,CAAC,IAAM,CACdY,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,KAAK,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAC1C,KAAM,CAAAP,GAAG,CAAG,KAAM,CAAAH,KAAK,CAAC,YAAY,CAAE,CACpCW,MAAM,CAAE,MAAM,CACdV,WAAW,CAAE,SAAS,CACtBW,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEN,QAAQ,CAAEC,QAAS,CAAC,CAC7C,CAAC,CAAC,CAEF,GAAIP,GAAG,CAACa,EAAE,CAAE,CACVjB,SAAS,CAAC,CAAC,CAAE;AACb,MAAO,KAAI,CACb,CAEA,MAAO,MAAK,CACd,CAAC,CAED,KAAM,CAAAkB,MAAM,CAAG,KAAAA,CAAA,GAAY,CACzB,KAAM,CAAAjB,KAAK,CAAC,aAAa,CAAE,CACzBW,MAAM,CAAE,MAAM,CACdV,WAAW,CAAE,SACf,CAAC,CAAC,CACFL,kBAAkB,CAAC,KAAK,CAAC,CAC3B,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAAC2B,QAAQ,EACnBC,KAAK,CAAE,CAAExB,eAAe,CAAEE,WAAW,CAAEW,KAAK,CAAES,MAAO,CAAE,CAAAvB,QAAA,CAEtDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}